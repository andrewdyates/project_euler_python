#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright Â© 2011 Andrew D. Yates
# andrewyates.name@gmail.com
"""
Problem 2
http://projecteuler.net/index.php?section=problems&id=2

Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will
be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.

Attempt Two: skip odds

given that
  ODD+ODD=EVEN
  ODD+EVEN=ODD
  EVEN+EVEN=EVEN

the series is from 2 odd numbers x and y:
[(x, ODD), (y, ODD), (x+y, EVEN), (x+2y, ODD), (2x+3y, ODD), (3x+5y, EVEN)] ...

Compute each successive pair of odd values, and then sum their sum
"""
LIM = 4000000

def seq_sol():
  x = 1
  y = 1
  sum = 0
  while(x+y <= LIM):
    sum += x+y
    x, y = x + 2*y, 2*x + 3*y
  return sum
